@page "/Entries"
@inject HttpClient Http
@inject IToastService toastService
<h1 aria-label="kullanıcılar">Kayıtlar</h1>

@*<button class="btn btn-dark" @onclick="@show">yeni ekle</button>
    <br />*@

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th aria-label="Kullanıcı Adı">Kullanıcı Adı</th>
            <th aria-label="Ad">Ad</th>
            <th aria-label="Soyad">Soyad</th>
            <th aria-label="Sil">Sil</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var usr in UserList)
        {
            <tr>
                <td aria-label="@usr.Username">@usr.Username</td>
                <td aria-label="@usr.Name">@usr.Name</td>
                <td aria-label="@usr.Surname">@usr.Surname</td>
                <td><button class="btn btn-danger" aria-label="Sil" @onclick="() => Delete(usr.Id)">Sil</button></td>
            </tr>
        }
    </tbody>
</table>
<br />
<hr />


<div class="container-fluid h-100 " id="kullaniciEkle">
    <div class="row justify-content-start align-items-baseline h-100">
        <div class="col col-sm-6 col-lg-4 col-xl-3">
            @*<img src="images/recycle-bin.png" />*@


            <EditForm Model="@entry" OnValidSubmit="AddEntry">
                <DataAnnotationsValidator />
                <ValidationSummary />


                <h5 aria-label="Yeni kullanıcı ekle">Yeni kullanıcı ekle</h5>

                <div class="form-group">
                    <InputText @bind-Value="user.Name" class="form-control form-control-" type="text" placeholder="Ad" />
                </div>


                <div class="form-group">
                    <InputText @bind-Value="user.Surname" class="form-control form-control" type="text" placeholder="Soyad" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="user.Username" class="form-control form-control" type="text" placeholder="Kullanıcı Adı" />
                </div>

                <div class="form-group">
                    <InputText @bind-Value="user.Password" class="form-control form-control" type="password" placeholder="Şifre" />
                </div>

                @*<div class="form-group">
                        <InputText @bind-Value="user.ConfirmPassword" class="form-control form-control" type="password" placeholder="Şifre (Tekrar)" />
                    </div>*@



                <div class="form-group">
                    <button class="btn btn-dark btn-block" aria-label="ekle" type="submit">Ekle</button>
                </div>

            </EditForm>
        </div>
    </div>

</div>



@code {
    private List<Entry>
    EntryList = new List<Entry>();

    private Entry entry = new Entry();

    //[CascadingParameter] public IModalService Modal { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Entry>>("api/Entry/AllEntries");
        EntryList = result.ToList();



    }

    public async Task AddEntry()
    {
        var result = await Http.PostAsJsonAsync("api/Entry/Add", entry);

        if (result.IsSuccessStatusCode)
        {
            var result2 = await Http.GetFromJsonAsync<List<Entry>>("api/Entry/AllUsers");
            EntryList = result2.ToList();
            entry = new Entry();

            toastService.ShowSuccess("Kaydedildi.", "BAŞARILI");
        }
        else
        {
            toastService.ShowError(" Kayıt zaten mevcut!", "HATA");
        }
    }

    public async Task Delete(Guid id)
    {
        var result = await Http.DeleteAsync("api/Entry/" + id);
        if (result.IsSuccessStatusCode)
        {
            EntryList.Remove(EntryList.FirstOrDefault(x => x.Id == id));
            toastService.ShowSuccess("Kayıt başarıyla silindi.", "BAŞARILI");

        }
        else
        {
            toastService.ShowError("Kayıt silinemedi.", "HATA");
        }

    }

}
